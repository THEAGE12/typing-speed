{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\react software\\\\typing speed test\\\\typing-speed-test\\\\src\\\\webpages\\\\WritingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Timer from '../components/Timer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WritingPage = () => {\n  _s();\n  const [textInput, setTextInput] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n  const [myWord, setMyWord] = useState(\"\");\n  const [incorrectCount, setIncorrectCount] = useState(0);\n  const [characters, setCharacters] = useState(0);\n  const generateRandomText = useCallback(() => {\n    const words = [\"Game\", \"is\", \"my\", \"sit\", \"Name\", \"constructor\", \"adipiscing\", \"chocolate\", \"sed\", \"do\", \"termper\", \"bestfriend\", \"Fight\", \"in\", \"manufacture\", \"eneyearfeast\", \"money\", \"magna\", \"aliqua\"];\n    const randomText = Array.from({\n      length: 250\n    }, () => words[Math.floor(Math.random() * words.length)]);\n    return randomText.join(\" \");\n  }, []);\n  useEffect(() => {\n    if (isStarted) {\n      setMyWord(generateRandomText());\n      setIncorrectCount(0);\n      setCharacters(0);\n    }\n  }, [isStarted, generateRandomText]);\n  useEffect(() => {\n    let count = 0;\n    let count1 = 0;\n    if (isStarted) {\n      const minLength = Math.min(myWord.length, textInput.length);\n      for (let i = 0; i < minLength; i++) {\n        if (myWord[i] !== textInput[i] && myWord[i] !== ' ' && textInput[i] !== ' ') {\n          count++;\n        } else {\n          if (myWord[i] === ' ') {\n            count1++;\n          } else if (myWord[i] === textInput[i] && textInput.length < 2) {\n            setCharacters(prevCount1 => prevCount1 + count1);\n          }\n          break;\n        }\n      }\n      setIncorrectCount(count);\n    }\n  }, [isStarted, myWord, textInput]);\n  const renderColoredWord = () => {\n    const minLength = Math.min(myWord.length, textInput.length);\n    return Array.from({\n      length: minLength\n    }, (_, i) => {\n      const style = {\n        color: myWord[i] === textInput[i] ? 'green' : 'red',\n        display: 'inline-block'\n      };\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: style,\n        children: myWord[i]\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const handleTimerComplete = value => {\n    if (value === 0) {\n      setIsModalOpen(true);\n      setIsStarted(false);\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleStart = () => {\n    setIsStarted(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"exampleFormControlTextarea1\",\n        className: \"form-label\",\n        children: \"Typing Speed Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderColoredWord()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"exampleFormControlInput1\",\n        className: \"form-label\",\n        children: \"Write here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        id: \"exampleFormControlInput1\",\n        placeholder: \"\",\n        value: isStarted ? textInput : \"\",\n        disabled: !isStarted,\n        onChange: e => setTextInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isStarted && /*#__PURE__*/_jsxDEV(Timer, {\n          isStarted: isStarted,\n          onTimerComplete: handleTimerComplete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [characters, \" characters, \", Math.ceil(characters / 4.7), \" words\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), isStarted && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Incorrect characters: \", incorrectCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 23\n      }, this), !isStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStart,\n        children: \"Start Typing Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: closeModal,\n      contentLabel: \"Time out\",\n      style: {\n        content: {\n          height: '200px',\n          width: '400px',\n          margin: 'auto'\n        },\n        overlay: {\n          background: 'rgba(0, 0, 0, 0.3)'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Timer has reached 0!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        children: \"Close Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(WritingPage, \"qNH149PmZBU9JPut2Vti+AyzvbE=\");\n_c = WritingPage;\nexport default WritingPage;\nvar _c;\n$RefreshReg$(_c, \"WritingPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Timer","Modal","jsxDEV","_jsxDEV","WritingPage","_s","textInput","setTextInput","isModalOpen","setIsModalOpen","isStarted","setIsStarted","myWord","setMyWord","incorrectCount","setIncorrectCount","characters","setCharacters","generateRandomText","words","randomText","Array","from","length","Math","floor","random","join","count","count1","minLength","min","i","prevCount1","renderColoredWord","_","style","color","display","children","fileName","_jsxFileName","lineNumber","columnNumber","handleTimerComplete","value","closeModal","handleStart","className","htmlFor","type","id","placeholder","disabled","onChange","e","target","onTimerComplete","ceil","onClick","isOpen","onRequestClose","contentLabel","content","height","width","margin","overlay","background","_c","$RefreshReg$"],"sources":["D:/React/react software/typing speed test/typing-speed-test/src/webpages/WritingPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport Timer from '../components/Timer';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Modal from 'react-modal';\r\n\r\nconst WritingPage = () => {\r\n  const [textInput, setTextInput] = useState(\"\");\r\n  \r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isStarted, setIsStarted] = useState(false);\r\n  const [myWord, setMyWord] = useState(\"\");\r\n  const [incorrectCount, setIncorrectCount] = useState(0);\r\n  const [characters,setCharacters] = useState(0)\r\n  const generateRandomText = useCallback(() => {\r\n    const words = [\r\n      \"Game\", \"is\", \"my\", \"sit\", \"Name\", \"constructor\",\r\n      \"adipiscing\", \"chocolate\", \"sed\", \"do\", \"termper\", \"bestfriend\",\r\n      \"Fight\", \"in\", \"manufacture\", \"eneyearfeast\", \"money\", \"magna\", \"aliqua\"\r\n    ];\r\n\r\n    const randomText = Array.from({ length: 250 }, () => words[Math.floor(Math.random() * words.length)]);\r\n    return randomText.join(\" \");\r\n  }, []); \r\n\r\n  useEffect(() => {\r\n    if (isStarted) {\r\n      setMyWord(generateRandomText());\r\n      setIncorrectCount(0);\r\n      setCharacters(0);\r\n    }\r\n  }, [isStarted, generateRandomText]);\r\n\r\n  useEffect(() => {\r\n    let count = 0;\r\n    let count1 = 0;\r\n\r\n    if (isStarted) {\r\n      const minLength = Math.min(myWord.length, textInput.length);\r\n\r\n      for (let i = 0; i < minLength; i++) {\r\n        if (myWord[i] !== textInput[i] && myWord[i] !== ' ' && textInput[i] !== ' ') {\r\n          count++;\r\n        } else {\r\n          if (myWord[i] === ' ') {\r\n            count1++;\r\n          } else if (myWord[i] === textInput[i] && textInput.length < 2) {\r\n            setCharacters((prevCount1) => prevCount1 + count1);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n\r\n      setIncorrectCount(count);\r\n    }\r\n  }, [isStarted, myWord, textInput]);\r\n\r\n  const renderColoredWord = () => {\r\n    const minLength = Math.min(myWord.length, textInput.length);\r\n\r\n    return Array.from({ length: minLength }, (_, i) => {\r\n      const style = {\r\n        color: myWord[i] === textInput[i] ? 'green' : 'red',\r\n        display: 'inline-block',\r\n      };\r\n\r\n      return (\r\n        <span key={i} style={style}>\r\n          {myWord[i]}\r\n        </span>\r\n      );\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const handleTimerComplete = (value) => {\r\n    \r\n\r\n    if (value === 0) {\r\n      setIsModalOpen(true);\r\n      setIsStarted(false);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleStart = () => {\r\n    setIsStarted(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">Typing Speed Test</label>\r\n        <div>\r\n          {renderColoredWord()}\r\n        </div>\r\n      </div>\r\n\r\n     \r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Write here</label>\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control\"\r\n          id=\"exampleFormControlInput1\"\r\n          placeholder=\"\"\r\n          value={isStarted ? textInput : \"\"}\r\n          disabled={!isStarted}\r\n          onChange={(e) => setTextInput(e.target.value)}\r\n        />\r\n        <div>\r\n          {isStarted && <Timer isStarted={isStarted} onTimerComplete={handleTimerComplete} />}\r\n        </div>\r\n        <b>{characters} characters, {Math.ceil(characters / 4.7)} words</b>\r\n        {isStarted && <p>Incorrect characters: {incorrectCount}</p>}\r\n        {!isStarted && <button onClick={handleStart}>Start Typing Test</button>}\r\n      </div>\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onRequestClose={closeModal}\r\n        contentLabel=\"Time out\"\r\n        style={{\r\n          content: {\r\n            height: '200px',\r\n            width: '400px',\r\n            margin: 'auto', \r\n          },\r\n          overlay: {\r\n            background: 'rgba(0, 0, 0, 0.3)', \r\n          },\r\n        }}\r\n      >\r\n        <h2>Timer has reached 0!</h2>\r\n        <button onClick={closeModal}>Close Modal</button>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WritingPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAO,sCAAsC;AAC7C,OAAOC,KAAK,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACmB,UAAU,EAACC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EAC9C,MAAMqB,kBAAkB,GAAGnB,WAAW,CAAC,MAAM;IAC3C,MAAMoB,KAAK,GAAG,CACZ,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,aAAa,EAChD,YAAY,EAAE,WAAW,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,EAC/D,OAAO,EAAE,IAAI,EAAE,aAAa,EAAE,cAAc,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,CACzE;IAED,MAAMC,UAAU,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAI,CAAC,EAAE,MAAMJ,KAAK,CAACK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGP,KAAK,CAACI,MAAM,CAAC,CAAC,CAAC;IACrG,OAAOH,UAAU,CAACO,IAAI,CAAC,GAAG,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN7B,SAAS,CAAC,MAAM;IACd,IAAIY,SAAS,EAAE;MACbG,SAAS,CAACK,kBAAkB,CAAC,CAAC,CAAC;MAC/BH,iBAAiB,CAAC,CAAC,CAAC;MACpBE,aAAa,CAAC,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAACP,SAAS,EAAEQ,kBAAkB,CAAC,CAAC;EAEnCpB,SAAS,CAAC,MAAM;IACd,IAAI8B,KAAK,GAAG,CAAC;IACb,IAAIC,MAAM,GAAG,CAAC;IAEd,IAAInB,SAAS,EAAE;MACb,MAAMoB,SAAS,GAAGN,IAAI,CAACO,GAAG,CAACnB,MAAM,CAACW,MAAM,EAAEjB,SAAS,CAACiB,MAAM,CAAC;MAE3D,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,EAAEE,CAAC,EAAE,EAAE;QAClC,IAAIpB,MAAM,CAACoB,CAAC,CAAC,KAAK1B,SAAS,CAAC0B,CAAC,CAAC,IAAIpB,MAAM,CAACoB,CAAC,CAAC,KAAK,GAAG,IAAI1B,SAAS,CAAC0B,CAAC,CAAC,KAAK,GAAG,EAAE;UAC3EJ,KAAK,EAAE;QACT,CAAC,MAAM;UACL,IAAIhB,MAAM,CAACoB,CAAC,CAAC,KAAK,GAAG,EAAE;YACrBH,MAAM,EAAE;UACV,CAAC,MAAM,IAAIjB,MAAM,CAACoB,CAAC,CAAC,KAAK1B,SAAS,CAAC0B,CAAC,CAAC,IAAI1B,SAAS,CAACiB,MAAM,GAAG,CAAC,EAAE;YAC7DN,aAAa,CAAEgB,UAAU,IAAKA,UAAU,GAAGJ,MAAM,CAAC;UACpD;UACA;QACF;MACF;MAEAd,iBAAiB,CAACa,KAAK,CAAC;IAC1B;EACF,CAAC,EAAE,CAAClB,SAAS,EAAEE,MAAM,EAAEN,SAAS,CAAC,CAAC;EAElC,MAAM4B,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMJ,SAAS,GAAGN,IAAI,CAACO,GAAG,CAACnB,MAAM,CAACW,MAAM,EAAEjB,SAAS,CAACiB,MAAM,CAAC;IAE3D,OAAOF,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEO;IAAU,CAAC,EAAE,CAACK,CAAC,EAAEH,CAAC,KAAK;MACjD,MAAMI,KAAK,GAAG;QACZC,KAAK,EAAEzB,MAAM,CAACoB,CAAC,CAAC,KAAK1B,SAAS,CAAC0B,CAAC,CAAC,GAAG,OAAO,GAAG,KAAK;QACnDM,OAAO,EAAE;MACX,CAAC;MAED,oBACEnC,OAAA;QAAciC,KAAK,EAAEA,KAAM;QAAAG,QAAA,EACxB3B,MAAM,CAACoB,CAAC;MAAC,GADDA,CAAC;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CAAC;IAEX,CAAC,CAAC;EACJ,CAAC;EAID,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;IAGrC,IAAIA,KAAK,KAAK,CAAC,EAAE;MACfpC,cAAc,CAAC,IAAI,CAAC;MACpBE,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMmC,UAAU,GAAGA,CAAA,KAAM;IACvBrC,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMsC,WAAW,GAAGA,CAAA,KAAM;IACxBpC,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,oBACER,OAAA;IAAAoC,QAAA,gBACEpC,OAAA;MAAK6C,SAAS,EAAC,MAAM;MAAAT,QAAA,gBACnBpC,OAAA;QAAO8C,OAAO,EAAC,6BAA6B;QAACD,SAAS,EAAC,YAAY;QAAAT,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7FxC,OAAA;QAAAoC,QAAA,EACGL,iBAAiB,CAAC;MAAC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNxC,OAAA;MAAK6C,SAAS,EAAC,MAAM;MAAAT,QAAA,gBACnBpC,OAAA;QAAO8C,OAAO,EAAC,0BAA0B;QAACD,SAAS,EAAC,YAAY;QAAAT,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnFxC,OAAA;QACE+C,IAAI,EAAC,OAAO;QACZF,SAAS,EAAC,cAAc;QACxBG,EAAE,EAAC,0BAA0B;QAC7BC,WAAW,EAAC,EAAE;QACdP,KAAK,EAAEnC,SAAS,GAAGJ,SAAS,GAAG,EAAG;QAClC+C,QAAQ,EAAE,CAAC3C,SAAU;QACrB4C,QAAQ,EAAGC,CAAC,IAAKhD,YAAY,CAACgD,CAAC,CAACC,MAAM,CAACX,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACFxC,OAAA;QAAAoC,QAAA,EACG7B,SAAS,iBAAIP,OAAA,CAACH,KAAK;UAACU,SAAS,EAAEA,SAAU;UAAC+C,eAAe,EAAEb;QAAoB;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChF,CAAC,eACNxC,OAAA;QAAAoC,QAAA,GAAIvB,UAAU,EAAC,eAAa,EAACQ,IAAI,CAACkC,IAAI,CAAC1C,UAAU,GAAG,GAAG,CAAC,EAAC,QAAM;MAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAClEjC,SAAS,iBAAIP,OAAA;QAAAoC,QAAA,GAAG,wBAAsB,EAACzB,cAAc;MAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC1D,CAACjC,SAAS,iBAAIP,OAAA;QAAQwD,OAAO,EAAEZ,WAAY;QAAAR,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC,eACNxC,OAAA,CAACF,KAAK;MACJ2D,MAAM,EAAEpD,WAAY;MACpBqD,cAAc,EAAEf,UAAW;MAC3BgB,YAAY,EAAC,UAAU;MACvB1B,KAAK,EAAE;QACL2B,OAAO,EAAE;UACPC,MAAM,EAAE,OAAO;UACfC,KAAK,EAAE,OAAO;UACdC,MAAM,EAAE;QACV,CAAC;QACDC,OAAO,EAAE;UACPC,UAAU,EAAE;QACd;MACF,CAAE;MAAA7B,QAAA,gBAEFpC,OAAA;QAAAoC,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BxC,OAAA;QAAQwD,OAAO,EAAEb,UAAW;QAAAP,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACtC,EAAA,CAvIID,WAAW;AAAAiE,EAAA,GAAXjE,WAAW;AAyIjB,eAAeA,WAAW;AAAC,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\react software\\\\typing speed test\\\\typing-speed-test\\\\src\\\\webpages\\\\WritingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Timer from '../components/Timer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WritingPage = () => {\n  _s();\n  const [textInput, setTextInput] = useState(\"\");\n  const [toPassValue, setToPassValue] = useState();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n  const handleTimerComplete = value => {\n    setToPassValue(value);\n    if (value === 0) {\n      // Open the modal when toPassValue is 0\n      setIsModalOpen(true);\n      setIsStarted(false);\n    }\n  };\n  const generateRandomText = () => {\n    // Function to generate random text of 250 words\n    // You can customize this function based on your requirements\n    const words = [\"Lorem\", \"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipiscing\", \"elit\", \"sed\", \"do\", \"eiusmod\", \"tempor\", \"incididunt\", \"ut\", \"labore\", \"et\", \"dolore\", \"magna\", \"aliqua\"];\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleStart = () => {\n    setIsStarted(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"exampleFormControlTextarea1\",\n        className: \"form-label\",\n        children: \"Typing Speed Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"exampleFormControlTextarea1\",\n        rows: \"5\",\n        value: generateRandomText.words\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"exampleFormControlInput1\",\n        className: \"form-label\",\n        children: \"Write here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        id: \"exampleFormControlInput1\",\n        placeholder: \"\",\n        value: textInput,\n        disabled: !isStarted,\n        onChange: e => setTextInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isStarted && /*#__PURE__*/_jsxDEV(Timer, {\n          isStarted: isStarted,\n          onTimerComplete: handleTimerComplete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [textInput.split(\"\").length, \" characters and \", Math.ceil(textInput.split(\"\").length / 5), \" words\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), !isStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStart,\n        children: \"Start Typing Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: closeModal,\n      contentLabel: \"Time out\",\n      style: {\n        content: {\n          height: '200px',\n          width: '400px',\n          margin: 'auto' // Center the modal\n        },\n        overlay: {\n          background: 'rgba(0, 0, 0, 0.3)' // Semi-transparent overlay\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Timer has reached 0!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        children: \"Close Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(WritingPage, \"5mkaOPz0anCZM57gcvg/gt/kZqw=\");\n_c = WritingPage;\nexport default WritingPage;\nvar _c;\n$RefreshReg$(_c, \"WritingPage\");","map":{"version":3,"names":["React","useState","Timer","Modal","jsxDEV","_jsxDEV","WritingPage","_s","textInput","setTextInput","toPassValue","setToPassValue","isModalOpen","setIsModalOpen","isStarted","setIsStarted","handleTimerComplete","value","generateRandomText","words","closeModal","handleStart","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","rows","type","placeholder","disabled","onChange","e","target","onTimerComplete","split","length","Math","ceil","onClick","isOpen","onRequestClose","contentLabel","style","content","height","width","margin","overlay","background","_c","$RefreshReg$"],"sources":["D:/React/react software/typing speed test/typing-speed-test/src/webpages/WritingPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Timer from '../components/Timer';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Modal from 'react-modal';\r\n\r\nconst WritingPage = () => {\r\n  const [textInput, setTextInput] = useState(\"\");\r\n  const [toPassValue, setToPassValue] = useState();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isStarted, setIsStarted] = useState(false);\r\n\r\n  const handleTimerComplete = (value) => {\r\n    setToPassValue(value);\r\n    \r\n    if (value === 0) {\r\n      // Open the modal when toPassValue is 0\r\n      setIsModalOpen(true);\r\n      setIsStarted(false)\r\n    }\r\n  };\r\n  const generateRandomText = () => {\r\n    // Function to generate random text of 250 words\r\n    // You can customize this function based on your requirements\r\n    const words = [\r\n      \"Lorem\", \"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\",\r\n      \"adipiscing\", \"elit\", \"sed\", \"do\", \"eiusmod\", \"tempor\",\r\n      \"incididunt\", \"ut\", \"labore\", \"et\", \"dolore\", \"magna\", \"aliqua\"\r\n    ];\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleStart = () => {\r\n    setIsStarted(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">Typing Speed Test</label>\r\n        <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\" value = {generateRandomText.words}></textarea>\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Write here</label>\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control\"\r\n          id=\"exampleFormControlInput1\"\r\n          placeholder=\"\"\r\n          value={textInput}\r\n          disabled={!isStarted}\r\n          onChange={(e) => setTextInput(e.target.value)}\r\n        />\r\n        <div>\r\n        {isStarted && <Timer isStarted={isStarted} onTimerComplete={handleTimerComplete} />}\r\n        </div>\r\n        <b>{textInput.split(\"\").length} characters and {Math.ceil(textInput.split(\"\").length / 5)} words</b>\r\n        {!isStarted && <button onClick={handleStart}>Start Typing Test</button>}\r\n      </div>\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onRequestClose={closeModal}\r\n        contentLabel=\"Time out\"\r\n        style={{\r\n          content: {\r\n            height: '200px',\r\n            width: '400px',\r\n            margin: 'auto', // Center the modal\r\n          },\r\n          overlay: {\r\n            background: 'rgba(0, 0, 0, 0.3)', // Semi-transparent overlay\r\n          },\r\n        }}\r\n      >\r\n        <h2>Timer has reached 0!</h2>\r\n        <button onClick={closeModal}>Close Modal</button>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WritingPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}